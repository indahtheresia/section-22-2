{"ast":null,"code":"var _jsxFileName = \"/Users/indah/Developments/react/section-22-2/frontend/src/pages/NewEventPage.js\";\nimport { redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\n;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not save events.'\n    }), {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\n;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","Response","message","status","$RefreshReg$"],"sources":["/Users/indah/Developments/react/section-22-2/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\n\nfunction NewEventPage() {\n  return <EventForm />\n};\n\nexport default NewEventPage;\n\nexport async function action({request, params}) {\n  const data = request.formData();\n\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description'),\n  };\n\n  const response = fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type' : 'application/json'\n    },\n    body: JSON.stringify(eventData),\n  });\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: 'Could not save events.'}), { status: 500});\n  }\n  return redirect('/events');\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACtB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB;AAACC,EAAA,GAFQL,YAAY;AAEpB;AAED,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC9C,MAAMC,IAAI,GAAGF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAE/B,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,QAAQ,GAAGC,KAAK,CAAC,8BAA8B,EAAE;IACrDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAG;IACnB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACH,IAAI,CAACC,SAAS,CAAC;MAAEG,OAAO,EAAE;IAAwB,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC1F;EACA,OAAO/B,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC;AAAC,IAAAS,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}