{"ast":null,"code":"var _jsxFileName = \"/Users/indah/Developments/react/section-22-2/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport EventsPage from './components/EventsPage';\nimport EventDetailPage from './components/EventDetailPage';\nimport NewEventPage from './components/NewEventPage';\nimport EditEventPage from './components/EditEventPage';\nimport MainNavigation from './components/MainNavigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }, this),\n    children: [{\n      path: '/',\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }, this)\n    }, {\n      path: '/events',\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: '/events/:id',\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 39\n      }, this)\n    }, {\n      path: '/events/new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 39\n      }, this)\n    }, {\n      path: '/events/:id/edit',\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 44\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","MainNavigation","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/indah/Developments/react/section-22-2/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport EventsPage from './components/EventsPage';\nimport EventDetailPage from './components/EventDetailPage';\nimport NewEventPage from './components/NewEventPage';\nimport EditEventPage from './components/EditEventPage';\nimport MainNavigation from './components/MainNavigation';\n\nfunction App() {\n  const router = createBrowserRouter([\n    { path: '/', element: <MainNavigation />, children: [\n      { path: '/', element: <HomePage />},\n      { path: '/events', element: <EventsPage />},\n      { path: '/events/:id', element: <EventDetailPage />},\n      { path: '/events/new', element: <NewEventPage />},\n      { path: '/events/:id/edit', element: <EditEventPage />},\n    ]},\n    \n  ]);\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;IAAEY,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEJ,OAAA,CAACF,cAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,QAAQ,EAAE,CAClD;MAAEN,IAAI,EAAE,GAAG;MAAEC,OAAO,eAAEJ,OAAA,CAACP,QAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EACnC;MAAEL,IAAI,EAAE,SAAS;MAAEC,OAAO,eAAEJ,OAAA,CAACN,UAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EAC3C;MAAEL,IAAI,EAAE,aAAa;MAAEC,OAAO,eAAEJ,OAAA,CAACL,eAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EACpD;MAAEL,IAAI,EAAE,aAAa;MAAEC,OAAO,eAAEJ,OAAA,CAACJ,YAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EACjD;MAAEL,IAAI,EAAE,kBAAkB;MAAEC,OAAO,eAAEJ,OAAA,CAACH,aAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC;EACxD,CAAC,CAEH,CAAC;EACF,oBAAOR,OAAA,CAACR,cAAc;IAACU,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACE,EAAA,GAZQT,GAAG;AAcZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}